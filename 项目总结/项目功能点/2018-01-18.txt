2018/1/18

1. 系统分为社交系统和应用系统
	* 社交系统是自己可以注册使用的
	* 应用系统必须是管理员创建账号，不能自己注册

2. 用户个人信息修改
	* 只能修改非关键信息或者是管理员填充的非关键信息
	如：电话，备注...
	* 一进入该功能就要获得用户初始化信息（用ajax请求，回写到页面）
	* 填充信息，并保存

3. 因为用户的个人信息不仅有User表的数据，还有部门表的信息，
	所以使用UserDto用户传输对象来填充用户的信息

4. 用mybatis的逆向工程获得实体对象，不要手写（字段太多了）

5. 角色表中的角色是否可用字段可以在创建角色的时候置为false进行冷冻，
	角色创建完毕后可以置为true解冻，当这个角色不再使用的时候置为false，
	不进行物理删除

6. 使用阿里的fastjson来将java对象转换成json字符串
JSON.toJSONString(Object obj);

7. 从后台获得数据后分别给表单赋值（form）以及给页面赋值（html）

8. 查询用户的个人信息的时候，要把用户的id也查出来，放到页面的
hidden域中（用于修改用户信息）

9. 通过$.serializeArray函数先把表单对象先序列化成json数组
再通过$.each函数取出数组中的每一个对象，把对象的name和value
赋值个一个空的对象，然后调用JSON.stringify(obj)把该js对象转化
成json格式的字符串，发往后台，后台通过一个String类型的变量接收
var jsonObj = {};
var formArray = $("#userInfoChangeForm").serializeArray();
$.each(formArray,function(i, item) {
	jsonObj[item.name] = item.value;
});
jsonObj = JSON.stringify(jsonObj);
详细用法参见：http://blog.csdn.net/a909301740/article/details/78809567

10. 在后台通过fastjson的JSON.parseObject(obj, Class.class)解析该json字符串

注：用户的所属部门，登录名称，工号不能修改，前台不能把这些参数传到后台，
后台mapper的sql里面也不能对这些字段做修改

11. 修改完用户的信息之后要再查询一下，这个查询动作要写在jquery的ajax的complete
方法里面，如果写在ajax调用以外的地方，那么查询出来的就有可能不是更新完的数据
因为ajax请求是异步的，后面的语句不会等待ajax请求完才执行，ajax执行的过程中
后面的语句就会执行。

