2018/2/9

1. 系统功能查缺补漏

删除：
	* 删除菜单，部门，区域都要删除对应的映射表里面的记录，以免造成垃圾数据
	（可以忽略，但是建议做的严谨点）

系统测试
	* 将所有开发的数据删除，导入初始化数据
	* 测试系统的整个功能流程
	* 核对数据是否正确
	* 修改bug
	* 迭代

研发测试，系统（硬件）测试

项目在现场部署时的注意事项：
	* 把数据库中的在开发调试时的一些垃圾数据删掉
	比如：用户管理就只留一个超级管理员账号
	部门和区域也只留一个顶级节点
	角色只留一个超级管理员
	* 整理初始化脚本
	* mysql自增长弊端：不能向oracle那样使用序列明确指明每张表默认的顶级节点的id
	* 带着代码+初始化脚本去现场建个库能跑起来就可以
	* 正式的进行系统的集成测试，全部通过界面来进行操作，不要手动的操作数据库
	* 先测试简单的（部门，区域，菜单）
	* 排序按照10,20,30的顺序
	* 顶级用户，角色，菜单，部门，区域的删除按钮都不能删除
	* 只有信息部的经理才有超级管理员这个账号
	* 字典，菜单，角色一般不会给权限较小的角色
	* 区域，部门，用户权限一般给一些权限较小的角色
	* 添加部门的时候只给超级管理员增加对应关系，不给当前用户增加对应关系
	目的是为了二次审核


操作日志（AOP的后置通知/拦截器也可以做）
	* 日志的几个要素
	    什么人，什么时候，在哪，做了什么事情，造成了什么后果
	* 使用aspectJ，导入aop，aopaliance，aspectJ，spring-aspects包
	* 注册aspectJ的自动代理<aop:aspectj-autoproxy />

访问日志 用拦截器




